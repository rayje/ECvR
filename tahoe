#!/usr/bin/env node

var commandLine = require('commander'), 
	factory = require('./lib/tahoeFactory'),
	config = require('./config.json'),
	options = getOptions(),
	Runner = factory.getRunner(options);

if (!Runner) {
	console.log('Unknown options');
	options.help();
}

if (options.debug) {
	config.debug = options.debug;
}
var runner = new Runner(config);
runner.run(options);

function getOptions() {
	commandLine
		.version('0.0.1')
		.description('A command line utility for remote tahoe servers')
		.option('-k, --kill <nodeIp>', 'Stop a storage node')
		.option('-a, --killAll', 'Stop all storage nodes')
		.option('-e, --excludes <instanceIds>', 'A comma delimted list of excluded instances')
		.option('--status', 'Displays the status of Tahoe on all instances')
		.option('--debug', 'Run in debug mode')
		.option('--capture', 'Capture storage measurement')
		.option('--startInt <nodeIp>', 'Start an introducer node on the specified instance')
		.option('--killInt <nodeIp>', 'Kill an introducer running on the specified instance')

	commandLine.parse(process.argv);
	return commandLine;
}
